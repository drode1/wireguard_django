# Generated by Django 4.1.5 on 2023-01-03 18:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedIp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Разрешенный адрес',
                'verbose_name_plural': 'Разрешенные адреса',
                'ordering': ('is_active', '-id'),
            },
        ),
        migrations.CreateModel(
            name='Dns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Название ресурса')),
                ('dns_address', models.GenericIPAddressField(unique=True, verbose_name='DNS адрес')),
            ],
            options={
                'verbose_name': 'DNS адрес',
                'verbose_name_plural': 'DNS адреса',
                'ordering': ('is_active', '-id'),
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('endpoint', models.CharField(default='194.68.32.97', max_length=25, validators=[django.core.validators.validate_ipv4_address], verbose_name='IP адрес')),
                ('domain_name', models.CharField(blank=True, help_text='Заполните поле, если хотите использовать доменное имя, в качестве адреса подключения.', max_length=255, null=True, verbose_name='Доменное имя')),
                ('network_interface', models.CharField(blank=True, default='ens3', max_length=16, null=True, verbose_name='Сетевой интерфейс')),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настройки',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WireguardInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('private_key', models.CharField(blank=True, max_length=64, verbose_name='Приватный ключ')),
                ('public_key', models.CharField(blank=True, max_length=64, verbose_name='Публичный ключ')),
                ('name', models.CharField(default='wg0', max_length=100, unique=True, verbose_name='Название интерфейса')),
                ('listen_port', models.PositiveIntegerField(default='51820', verbose_name='Порт')),
                ('ip_address', models.GenericIPAddressField(default='10.0.0.0', unique=True, verbose_name='Адрес')),
                ('ip_address_node', models.PositiveSmallIntegerField(default=24, verbose_name='IP узел')),
                ('config_file', models.FileField(blank=True, upload_to='interfaces/', validators=[django.core.validators.FileExtensionValidator(['conf'])], verbose_name='Файл интерфейса')),
                ('server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interfaces', to='wireguard.generalsettings', verbose_name='Сервер')),
            ],
            options={
                'verbose_name': 'Интерфейс',
                'verbose_name_plural': 'Интерфейсы',
                'ordering': ('-created_time', 'name'),
            },
        ),
        migrations.CreateModel(
            name='WireguardPeer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('private_key', models.CharField(blank=True, max_length=64, verbose_name='Приватный ключ')),
                ('public_key', models.CharField(blank=True, max_length=64, verbose_name='Публичный ключ')),
                ('ip_address', models.GenericIPAddressField(default='10.0.0.0', unique=True, verbose_name='Адрес')),
                ('ip_address_node', models.PositiveSmallIntegerField(default=32, verbose_name='IP узел')),
                ('persistent_keep_alive', models.PositiveSmallIntegerField(default=20, verbose_name='Время жизни подключения')),
                ('config_file', models.FileField(blank=True, upload_to='configs/', validators=[django.core.validators.FileExtensionValidator(['conf'])], verbose_name='Конфиг файл')),
                ('allowed_ips', models.ManyToManyField(related_name='allowed_ip_set', to='wireguard.allowedip', verbose_name='Разрешенные адреса')),
                ('config_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='peers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('dns_addresses', models.ManyToManyField(related_name='dns_set', to='wireguard.dns', verbose_name='DNS адреса')),
                ('wireguard_interfaces', models.ManyToManyField(related_name='interface_set', to='wireguard.wireguardinterface', verbose_name='Интерфейсы')),
            ],
            options={
                'verbose_name': 'Пир',
                'verbose_name_plural': 'Пиры',
                'ordering': ('-created_time', 'id'),
            },
        ),
    ]
